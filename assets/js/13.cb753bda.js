(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{677:function(s,t,a){s.exports=a.p+"assets/img/arraylist01.b5891f05.png"},678:function(s,t,a){s.exports=a.p+"assets/img/arraylist02.55771608.png"},679:function(s,t,a){s.exports=a.p+"assets/img/ArrayList1.0fc537db.png"},680:function(s,t,a){s.exports=a.p+"assets/img/ArrayList2.d2a6a757.png"},681:function(s,t,a){s.exports=a.p+"assets/img/ArrayList3.bc2e8d6b.png"},682:function(s,t,a){s.exports=a.p+"assets/img/ArrayList4.0e96d2f5.png"},683:function(s,t,a){s.exports=a.p+"assets/img/ArrayList5.6e556eb1.png"},684:function(s,t,a){s.exports=a.p+"assets/img/ArrayList6.867227a0.png"},685:function(s,t,a){s.exports=a.p+"assets/img/ArrayList7.6161044b.png"},686:function(s,t,a){s.exports=a.p+"assets/img/ArrayList8.42e39613.png"},687:function(s,t,a){s.exports=a.p+"assets/img/ArrayList9.6270d0ea.png"},688:function(s,t,a){s.exports=a.p+"assets/img/ArrayList10.62ff6ce8.png"},689:function(s,t,a){s.exports=a.p+"assets/img/ArrayList11.3750e06b.png"},690:function(s,t,a){s.exports=a.p+"assets/img/ArrayList12.558e5502.png"},871:function(s,t,a){"use strict";a.r(t);var n=a(13),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"arraylist注意事项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#arraylist注意事项"}},[s._v("#")]),s._v(" ArrayList注意事项")]),s._v(" "),n("ol",[n("li",[s._v("permits all elements, including null ,ArrayList 可以加入null,并且多个")]),s._v(" "),n("li",[s._v("ArrayList基本等同于Vector，除了 ArrayList是线程不安全(执行效率高)看源码，在多线程情况下，不建议使用ArrayList")]),s._v(" "),n("li",[s._v("ArrayList是由数组来实现数据存储的（源码）")])]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayListDetail")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),s._v(" arrayList "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1)permits all elements, including null ,ArrayList 可以加入null,并且多个")]),s._v("\n        arrayList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        arrayList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arrayList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//[null, null]")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//2)ArrayList基本等同于Vector，除了 ArrayList是线程不安全(执行效率高)看源码，在多线程情况下，不建议使用ArrayList。")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  多线程可考虑用Vector")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n        public boolean add(E e) {//ArrayList是线程不安全  没有synchronized\n            ensureCapacityInternal(size + 1);  // Increments modCount!!\n            elementData[size++] = e;\n        return true;\n        }*/")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//3）ArrayList是由数组来实现数据存储的(源码)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//        ArrayList arrayList = new ArrayList();")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//        arrayList.add(null);")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//        arrayList.add("jack");')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//        arrayList.add(null);")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//        arrayList.add("lpy");')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//        System.out.println(arrayList);")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("h3",{attrs:{id:"arraylist底层操作机制源码分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#arraylist底层操作机制源码分析"}},[s._v("#")]),s._v(" ArrayList底层操作机制源码分析")]),s._v(" "),n("ol",[n("li",[s._v("ArrayList中维护了一个0bject类型的数组elementData.\ntransient Object[] elementData;"),n("br"),s._v("\ntransient 瞬间的，短暂的，表示该属性不会被序列化"),n("br"),s._v(" "),n("img",{attrs:{src:a(677),alt:"arraylist01"}}),s._v(" "),n("img",{attrs:{src:a(678),alt:"arraylist02"}})]),s._v(" "),n("li",[s._v("当创建ArrayList对象时，如果使用的是无参构造器，则初始elementData容量为0，第1次添加，则扩容elementData为10，如需要再次扩容，则扩容elementData为1.5倍。")]),s._v(" "),n("li",[s._v("如果使用的是指定大小的构造器，则初始elementData容量为指定大小，如果需要扩容, 则直接扩容elementData为1.5倍。")])]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),s._v(" list "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//使用for循环添加1-10数据")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//使用for循环添加11-15数据")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nlist"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nlist"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nlist"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" o "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("o"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h4",{attrs:{id:"无参构造器-创建和使用arraylist的源码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#无参构造器-创建和使用arraylist的源码"}},[s._v("#")]),s._v(" 无参构造器，创建和使用ArrayList的源码")]),s._v(" "),n("p",[s._v("（先进行自动装箱）"),n("br"),s._v("\n创建空的elementData数组"),n("br"),s._v(" "),n("img",{attrs:{src:a(679),alt:"1"}}),n("br"),s._v("\n执行list.add(1.先确认大小，是否要扩容；2.然后再执行赋值"),n("br"),s._v("\n重点分析ensureCapacityInternal方法"),n("br"),s._v(" "),n("img",{attrs:{src:a(680),alt:"2"}}),n("br"),s._v("\n该方法确定最小容量minCapacity"),n("br"),s._v("\n（1）第一次扩容为10"),n("br"),s._v(" "),n("img",{attrs:{src:a(681),alt:"3"}}),n("br"),s._v("\n（1）modCount++ 记录集合被修改的次数  防止多线程操作出现的异常"),n("br"),s._v("\n（2）如果elementData大小不够，就调用grow（）去扩容"),n("br"),s._v(" "),n("img",{attrs:{src:a(682),alt:"4"}}),n("br"),s._v("\n（1）扩容"),n("br"),s._v("\n（2）使用扩容机制确定扩大多少"),n("br"),s._v("\n（3）第一次newCapacity = 10"),n("br"),s._v("\n（4）第二次及以后按照1.5倍扩容（扩容使用的是Arrays.copyOf（），可保留原来的数据）"),n("br"),s._v(" "),n("img",{attrs:{src:a(683),alt:"5"}}),n("br"),s._v("\n逐层返回到add（）方法"),n("br"),s._v("\n之后，不再执行 grow（），继续回到add（） 执行"),n("br"),s._v(" "),n("img",{attrs:{src:a(684),alt:"6"}}),n("br"),s._v("\n执行到11次时，扩容"),n("br"),s._v(" "),n("img",{attrs:{src:a(685),alt:"7"}}),n("br"),s._v("\n开始扩容"),n("br"),s._v(" "),n("img",{attrs:{src:a(686),alt:"8"}}),n("br"),s._v("\n回到add（），11放在索引为10的位置"),n("br"),s._v(" "),n("img",{attrs:{src:a(687),alt:"9"}}),n("br")]),s._v(" "),n("h4",{attrs:{id:"arraylist-list-new-arraylist-8"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#arraylist-list-new-arraylist-8"}},[s._v("#")]),s._v(" //ArrayList list = new ArrayList(8);")]),s._v(" "),n("h4",{attrs:{id:"有参构造器-创建和使用arraylist的源码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#有参构造器-创建和使用arraylist的源码"}},[s._v("#")]),s._v(" 有参构造器，创建和使用ArrayList的源码")]),s._v(" "),n("p",[s._v("创建指定大小的elementData数组 this.elementData = new Object[capacity]"),n("br"),s._v(" "),n("img",{attrs:{src:a(688),alt:"10"}}),n("br"),s._v(" "),n("img",{attrs:{src:a(689),alt:"11"}}),n("br"),s._v(" "),n("img",{attrs:{src:a(690),alt:"12"}}),n("br"),s._v("\n如果是有参构造器，那么扩容机制"),n("br")]),s._v(" "),n("ol",[n("li",[s._v("第一次扩容就按照elementData的1.5倍扩容")]),s._v(" "),n("li",[s._v("整个执行流程与无参构造器类似")])])])}),[],!1,null,null,null);t.default=r.exports}}]);